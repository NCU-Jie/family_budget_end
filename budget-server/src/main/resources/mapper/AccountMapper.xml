<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.budget.mapper.AccountMapper">
    <update id="update">
        update account
        <set>
            <if test="memberName != null">
                member_name = #{memberName},
            </if>

            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>

            <if test="memberId != null">
                member_id = #{memberId},
            </if>
            <if test="money != null">
                money = #{money},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="typeId != null">
                type_id = #{typeId},
            </if>
            <if test="accountDate!=null">
                account_date = #{accountDate},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    <select id="pageQuery" resultType="com.budget.vo.AccountVO">
        select
        a.id,
        a.category_id,
        category.name AS category_name,
        a.member_id,
        a.money,
        a.description,
        a.create_time,
        a.create_user,
        category.type_id AS type_id,
        a.member_name,
        a.account_date,
        member.name AS record_member_name
        from account a
        join member on a.create_user = member.id
        join category on a.category_id = category.id
        <where>
            <if test="categoryId != null">
                and a.category_id = #{categoryId}
            </if>
            <if test="familyId != null">
                and a.family_id = #{familyId}
            </if>
            <if test="typeId != null">
                and category.type_id = #{typeId}
            </if>
            <if test="memberIds != null and memberIds.size() > 0">
                AND member_id IN
                <foreach collection="memberIds" item="memberId" open="(" separator="," close=")">
                    #{memberId}
                </foreach>
            </if>
            <if test="description != null">
                and a.description like concat('%', #{description}, '%')
            </if>
            <if test="beginDate != null">
                and  account_date &gt;= #{beginDate}
            </if>
            <if test="endDate != null">
                and account_date &lt;= #{endDate}
            </if>
        </where>
         order by a.account_date desc
    </select>

    <select id="getAccountByCategoryId" resultType="com.budget.entity.Account">
        select * from account
        where category_id = #{categoryId} and family_id = #{familyId}
    </select>

    <select id="summary" resultType="com.budget.vo.StatisticVO">
        SELECT
        CASE
        WHEN #{groupType} = 'year' THEN DATE_FORMAT(account_date, '%Y')
        WHEN #{groupType} = 'month' THEN DATE_FORMAT(account_date, '%Y-%m')
        WHEN #{groupType} = 'week' THEN CONCAT(YEAR(account_date), '-W', WEEK(account_date, 1))
        WHEN #{groupType} = 'day' THEN DATE_FORMAT(account_date, '%Y-%m-%d')
        WHEN #{groupType} = 'member' THEN member_id
        END AS group_name,
        <if test="groupType == 'member'">
            MAX((SELECT m.name FROM member m WHERE m.id = account.member_id)) AS group_display_name,
        </if>
        SUM(CASE WHEN account.type_id = 0 THEN money ELSE 0 END) AS income,
        SUM(CASE WHEN account.type_id = 1 THEN money ELSE 0 END) AS expense,
        count(account.id) AS groupCount
        FROM account
        <where>
            <if test="typeId!=null">
                and account.type_id = #{typeId}
            </if>
            <if test="beginDate != null">
                AND account_date &gt;= #{beginDate}
            </if>
            <if test="endDate != null">
                AND account_date &lt;= #{endDate}
            </if>
            <if test="familyId != null">
                AND family_id = #{familyId}
            </if>

            <if test="categoryId != null">
                AND category_id = #{categoryId}
            </if>
            <if test="memberIds != null and memberIds.size() > 0">
                AND member_id IN
                <foreach collection="memberIds" item="memberId" open="(" separator="," close=")">
                    #{memberId}
                </foreach>
            </if>
        </where>
        GROUP BY group_name
        ORDER BY group_name ASC
    </select>
    <select id="summaryByType" resultType="com.budget.vo.StatisticCategoryVO">
    select category_id,category.name as category_name,
    SUM(CASE WHEN account.type_id = 0 THEN money ELSE 0 END) AS income,
    SUM(CASE WHEN account.type_id = 1 THEN money ELSE 0 END) AS expense,
    count(account.id) AS groupCount
    from account
    join category on account.category_id = category.id
        <where>
            <if test="typeId!=null">
                and account.type_id = #{typeId}
            </if>
            <if test="familyId!=null">
                and account.family_id = #{familyId}
            </if>
            <if test="beginDate != null">
                AND account_date &gt;= #{beginDate}
            </if>
            <if test="endDate != null">
                AND account_date &lt;= #{endDate}
            </if>
            <if test="memberIds != null and memberIds.size() > 0">
            AND member_id IN
            <foreach collection="memberIds" item="memberId" open="(" separator="," close=")">
                #{memberId}
            </foreach>
        </if>
        </where>
    GROUP BY category_id

    </select>
</mapper>